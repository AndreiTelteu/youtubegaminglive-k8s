apiVersion: apps/v1
kind: Deployment
metadata:
  name:  soketi
  namespace: youtubegaminglive
  labels:
    app: soketi
spec:
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: soketi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: soketi
    spec:
      containers:
      - name: soketi
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 80Mi
          limits:
            cpu: 600m
            memory: 400Mi
        livenessProbe:
          tcpSocket:
            port: 8084
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8084
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: PUSHER_PORT
          value: "8084"
        - name: REDIS_HOST
          value: "redis.youtubegaminglive.svc.cluster.local"
        - name: REDIS_DB
          value: "0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: redis-password
        - name: PUSHER_APP_ID
          valueFrom:
            secretKeyRef:
              name: soketi
              key: PUSHER_APP_ID
        - name: PUSHER_APP_KEY
          valueFrom:
            secretKeyRef:
              name: soketi
              key: PUSHER_APP_KEY
        - name: PUSHER_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: soketi
              key: PUSHER_APP_SECRET
        ports:
        - name: soketi
          containerPort: 8084
      restartPolicy: Always
